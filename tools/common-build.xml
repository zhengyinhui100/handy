<project name="common-build" basedir=".">
	<description>Common Build File</description>

	<dirname property="tools.dir" file="${ant.file.common-build}"/>
	
	<property name="package.js" value="**/*-pkg.js"/>
	<property name="package.css" value="**/*-pkg.css"/>

	<property name="gcc.jar" location="${tools.dir}/compiler.jar"/>
	<property name="yc.jar" location="${tools.dir}/yuicompressor.jar"/>
	<property name="less.jar" location="${tools.dir}/less2css.jar"/>

	<property name="version" value="1.0.0-dev"/>
	<property name="charset" value="utf-8"/>
	<property name="css.files" value="**/*.css"/>
	<property name="js.files" value="**/*.js"/>
	<property name="all.files" value="${css.files},${js.files}"/>
	<property name="filename" value="${project.name}"/>


	<taskdef resource="net/sf/antcontrib/antlib.xml" >
		<classpath>
			<pathelement location="${tools.dir}/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<!-- 用 gjslint 检查 -->
	<target name="gjslint">
		<exec executable="/usr/local/bin/gjslint" os="Mac OS X" failonerror="true">
			<arg line="${js.files}"/>
		</exec>
	</target>

	<!-- 编译less -->
	<target name="compile-less">
		<java jar="${less.jar}" failonerror="true" fork="true">
			<arg line="${project.dir}/less"/>
			<arg line="${project.dir}/css"/>
		</java>
	</target>
	
	<!-- 复制(仅打包文件) -->
	<target name="copy">
		<mkdir dir="${tmp.dir}"/>
		<copy todir="${tmp.dir}">
			<fileset dir="${project.dir}">
				<include name="${package.js}"/>
				<include name="${package.css}"/>
			</fileset>
		</copy>
	</target>
	
	<!-- 复制(包括所有文件) -->
	<target name="copy-all">
		<mkdir dir="${tmp.dir}"/>
		<copy todir="${tmp.dir}/js">	
		    <fileset dir="${js.dir}">
		    	<exclude name="*.xml"/>
		    </fileset>
    	</copy>
		<copy todir="${tmp.dir}/css">	
			<fileset dir="${css.dir}">
		    </fileset>
    	</copy>
	</target>

	<!-- 版本号替换 -->
	<target name="version">
		<replaceregexp match="%VERSION%"
                   replace="${version}"
                   flags="g"
                   encoding="${charset}">
			<fileset dir="${tmp.dir}" includes="*-pkg.js"/>
		</replaceregexp>

		<!-- 保存 debug 版本 -->
		<copy todir="${tmp.dir}">
			<fileset dir="${tmp.dir}"/>
			<mapper type="regexp"
              from="^(.*?)(?:-pkg)?\.(css|js)$"
              to="\1.\2"/>
		</copy>
	</target>


	<!-- 压缩css代码 -->
	<target name="compress-css">

		<!-- 用 YUICompressor 压缩 CSS -->
		<apply executable="java" verbose="true" failonerror="true" dir="${tmp.dir}">
			<fileset dir="${tmp.dir}" includes="${package.css}"/>
			<arg line="-jar"/>
			<arg path="${yc.jar}"/>
			<arg line="--charset ${charset}"/>
			<srcfile/>  
			<arg line="-o" />  
	        <mapper type="glob" from="*-pkg.css" to="${tmp.dir}/*.min.css" />  
	        <targetfile />  
		</apply>
		
		<!-- 删除CSS打包文件 -->
		<delete>
			<fileset dir="${tmp.dir}" includes="${package.css}"></fileset>
		</delete>

	</target>
	
	<!-- 压缩js代码 -->
	<target name="compress-js">
		<!-- DEBUG 替换 -->
		<replaceregexp match="%DEBUG%"
                   replace=""
                   flags="g"
                   encoding="${charset}">
			<fileset dir="${tmp.dir}" includes="*-pkg.js"/>
		</replaceregexp>

		<!-- 用 Google Closure Compiler 压缩 JS -->
		<apply executable="java" verbose="true" dir="${tmp.dir}" failonerror="true">
			<fileset dir="${tmp.dir}" includes="${package.js}"/>
			<arg line="-jar"/>
			<arg path="${gcc.jar}"/>
			<arg line="--compilation_level SIMPLE_OPTIMIZATIONS"/>
			<!--<arg line="-compilation_level ADVANCED_OPTIMIZATIONS"/>-->

			<!-- http://code.google.com/p/closure-compiler/wiki/Warnings -->
			<arg line="--warning_level VERBOSE"/>
			<!-- <arg line="-jscomp_error=checkTypes"/> -->
			<arg line="--jscomp_off=fileoverviewTags"/>

			<!-- define 必须要 var seajs; 在此不起作用。降级为全局替换方式 -->
			<!--<arg line="-define='seajs.version=&quot;${version}&quot;'"/>-->
			<!--<arg line="-define='seajs._data.config.debug=false'"/>-->

			<arg line="--externs ${tools.dir}/extern.js"/>

			<arg line="--js_output_file"/>
			<targetfile />
			<arg line="--js"/>
			<globmapper from="*-pkg.js" to="${tmp.dir}/*.min.js" />
			
		</apply>

		<!-- 用 YUICompressor 压缩 JS （后备）
		<apply executable="java" verbose="true" dir="${tmp.dir}">
			<fileset dir="${tmp.dir}" includes="*-pkg.js"/>
			<arg line="-jar"/>
			<arg path="${yc.jar}"/>
			<arg line="-charset ${charset}"/>
			<srcfile/>
			<arg line="-o ${filename}.js"/>
		</apply>
		-->

		<delete>
			<fileset dir="${tmp.dir}" includes="${package.js}"/>
		</delete>
	</target>


	<!-- 替换版本信息以及给文件加上版权信息 -->
	<target name="copyright">
		<tstamp>
			<format property="build.time" pattern="yyyy-MM-dd" locale="en,UK"/>
		</tstamp>

		<mkdir dir="${tmp.dir}/cp"/>
		<move todir="${tmp.dir}/cp">
			<fileset dir="${tmp.dir}" includes="${all.files}"/>
		</move>

		<for param="file">
			<path>
				<fileset dir="${tmp.dir}/cp" includes="${all.files}"/>
			</path>
			<sequential>
				<concat destfile="@{file}.tmp" encoding="${charset}"
                outputencoding="${charset}">
					<header filtering="no" trimleading="yes">/* Handy v${version} | ${build.time} | zhengyinhui100@gmail.com */
          			</header>
					<fileset file="@{file}"/>
				</concat>
				<move file="@{file}.tmp" tofile="@{file}"/>
			</sequential>
		</for>

		<move todir="${tmp.dir}">
			<fileset dir="${tmp.dir}/cp" includes="${all.files}"/>
		</move>
		<delete dir="${tmp.dir}/cp"/>
	</target>


	<!-- 扫尾工作 -->
	<target name="destroy">
	    <tstamp>
			<format property="build.version" pattern="yyyyMMddhhmmss" locale="en,UK"/>
		</tstamp>
		<move todir="${build.dir}">
			<fileset dir="${tmp.dir}" includes="**/*"/>
		</move>
		<delete dir="${tmp.dir}"/>
	</target>


	<target name="common-build"
          depends="version,compress-css,compress-js,copyright,destroy">
	</target>
	
	<target name="common-build-all"
          depends="copy-all,version,compress-css,compress-js,copyright,destroy">
	</target>

</project>
